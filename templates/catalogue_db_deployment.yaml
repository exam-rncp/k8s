apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.catalogueDb.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    name: {{ .Values.catalogueDb.name }}
spec:
  replicas: {{ .Values.catalogueDb.replicaCount }}
  selector:
    matchLabels:
      name: {{ .Values.catalogueDb.name }}
  template:
    metadata:
      labels:
        app: sock-shop
        name: {{ .Values.catalogueDb.name }}
    spec:
      containers:
        - name: {{ .Values.catalogueDb.name }}
          image: "{{ .Values.catalogueDb.image.repository }}:{{ .Values.catalogueDb.image.tag }}"
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: {{ .Values.catalogueDb.env.mysqlRootPassword }}
            - name: MYSQL_DATABASE
              value: {{ .Values.catalogueDb.env.mysqlDatabase }}
          ports:
            - name: mysql
              containerPort: {{ .Values.catalogueDb.service.targetPort }}
      #     securityContext:
      #       runAsNonRoot: true
      #       runAsUser: 1001
      #       readOnlyRootFilesystem: true
      #     volumeMounts:
      #       - mountPath: /var/lib/mysql
      #         name: mysql-data
      # volumes:
      #   - name: mysql-data
      #     emptyDir: {}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}