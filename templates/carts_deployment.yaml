apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.carts.name }}
  # annotations:
  #   prometheus.io/scrape: 'true'
  namespace: {{ .Release.Namespace }}
  labels:
    name: {{ .Values.carts.name }}
spec:
  replicas: {{ .Values.carts.replicaCount }}
  selector:
    matchLabels:
      name: {{ .Values.carts.name }}
  template:
    metadata:
      labels:
        name: {{ .Values.carts.name }}
    spec:
      initContainers:
        - name: wait-for-db
          image: busybox
          command:
          - 'sh'
          - '-c'
          - |
            echo "Waiting for MongoDB to be ready..."
            until nc -z -v -w10 {{ .Values.carts.name }}-db 27017; do
              echo "MongoDB not available yet, sleeping..."
              sleep 5
            done
            echo "MongoDB is available!"
      containers:
        - name: {{ .Values.carts.name }}
          image: "{{ .Values.carts.image.repository }}:{{ .Values.carts.image.tag }}"
          # command:
          #   - /usr/local/bin/java.sh
          #   - -jar
          #   - ./app.jar
          #   - --port={{ .Values.carts.service.targetPort }}
          env:
            - name: JAVA_OPTS
              value: {{ .Values.carts.env.javaOpts }}
          resources:
            {{- toYaml .Values.carts.resources | nindent 12 }}
          ports:
            - containerPort: {{ .Values.carts.service.targetPort }}
          securityContext:
            runAsNonRoot: true
            runAsUser: 10001
            capabilities:
              drop:
                - all
              add:
                - NET_BIND_SERVICE
            readOnlyRootFilesystem: true
          livenessProbe:
            httpGet:
              path: /health
              port: {{ .Values.carts.service.targetPort }}
            initialDelaySeconds: 300
            periodSeconds: 3
          readinessProbe:
            httpGet:
              path: /health
              port: {{ .Values.carts.service.targetPort }}
            initialDelaySeconds: 180
            periodSeconds: 3
          volumeMounts:
            - mountPath: /tmp
              name: tmp-volume
      volumes:
        - name: tmp-volume
          emptyDir:
            medium: Memory
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}