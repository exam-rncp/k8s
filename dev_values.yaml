global:
  environment: dev 

registry: "f3lin"

carts:
  name: carts
  replicaCount: 1
  image:
    repository: weaveworksdemos/carts
    tag: 0.4.8
  resources:
    limits:
      cpu: 300m
      memory: 2000Mi
    requests:
      cpu: 300m
      memory: 2000Mi
  env:
    javaOpts: "-Xms64m -Xmx128m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom -Dspring.zipkin.enabled=false"
  service:
    port: 80
    targetPort: 80

cartsDb:
  name: carts-db
  replicaCount: 1
  image:
    repository: mongo
    tag: 3.4
  service:
    port: 27017
    targetPort: 27017

catalogue:
  name: catalogue
  replicaCount: 1
  image:
    repository: catalogue
    tag: v0.1.1
  resources:
    limits:
      cpu: 200m
      memory: 100Mi
    requests:
      cpu: 200m
      memory: 100Mi
  service:
    port: 80
    targetPort: 80
  probe:
    liveness:
      path: /health
      initialDelaySeconds: 300
      periodSeconds: 3
    readiness:
      path: /health
      initialDelaySeconds: 180
      periodSeconds: 3

catalogueDb:
  name: catalogue-db
  replicaCount: 1
  image:
    repository: catalogue-db
    tag: v0.1.1
  resources:
    limits:
      cpu: 200m
      memory: 1000Mi
    requests:
      cpu: 200m
      memory: 300Mi
  env:
    mysqlRootPassword: fake_password
    mysqlDatabase: socksdb
  service:
    port: 3306
    targetPort: 3306

frontEnd:
  name: front-end
  replicaCount: 1
  image:
    repository: front-end
    tag: v0.1.1
  resources:
    limits:
      cpu: 300m
      memory: 1000Mi
    requests:
      cpu: 100m
      memory: 300Mi
  service:
    port: 80
    targetPort: 8079
  probe:
    liveness:
      path: /
      initialDelaySeconds: 300
      periodSeconds: 3
    readiness:
      path: /
      initialDelaySeconds: 30
      periodSeconds: 3
  env:
    sessionRedis: "true"

ingress:
  enabled: true
  className: nginx
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    nlb.ingress.kubernetes.io/scheme: "internet-facing"
    nlb.ingress.kubernetes.io/target-type: "ip"
    nlb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    nlb.ingress.kubernetes.io/ssl-redirect: '443'
    nlb.ingress.kubernetes.io/certificate-arn: "arn:aws:acm:eu-central-1:783764588202:certificate/bbf15876-8f60-4f50-bc4c-d89fa6ab3b6b"
  host: sock-shop-dev.app.monlabo.de

orders:
  name: orders
  replicaCount: 1
  image:
    repository: orders
    tag: v0.1.1
  resources:
    limits:
      cpu: 500m
      memory: 2000Mi
    requests:
      cpu: 200m
      memory: 2000Mi
  env:
    javaOpts: "-Xms64m -Xmx128m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom -Dspring.zipkin.enabled=false"
  service:
    port: 80
    targetPort: 80

ordersDb:
  name: orders-db
  replicaCount: 1
  image:
    repository: mongo
  tag: 3.4
  resources:
    requests:
        cpu: 500m
        memory: 512Mi
    limits:
        cpu: 500m
        memory: 512Mi
  service:
    port: 27017
    targetPort: 27017

payment:
  name: payment
  replicaCount: 1
  image:
    repository: payment
    tag: v0.1.1
  resources:
    limits:
      cpu: 100m
      memory: 100Mi
    requests:
      cpu: 100m
      memory: 100Mi
  service:
    port: 80
    targetPort: 80
  probe:
    path: /health
    liveness:
      initialDelaySeconds: 300
      periodSeconds: 3
    readiness:
      initialDelaySeconds: 180
      periodSeconds: 3

queueMaster:
  name: queue-master
  replicaCount: 1
  image:
    repository: queue-master
    tag: v0.1.1
  resources:
    limits:
      cpu: 300m
      memory: 1000Mi
    requests:
      cpu: 300m
      memory: 1000Mi
  service:
    port: 80
    targetPort: 80
  env:
    javaOpts: "-Xms64m -Xmx128m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom -Dspring.zipkin.enabled=false"

rabbitmq:
  name: rabbitmq
  replicaCount: 1
  image:
    repository: rabbitmq
    tag: 3.6.8-management
  ports:
    management: 15672
    rabbitmq: 5672
  exporter:
    image:
      repository: kbudde/rabbitmq-exporter
      tag: latest
    port: 9090
  service:
    ports:
      rabbitmq: 5672
      exporter: 9090

sessionDb:
  name: session-db
  replicaCount: 1
  image:
    repository: redis
    tag: alpine
  service:
    port: 6379
    targetPort: 6379

shipping:
  name: shipping
  replicaCount: 1
  image:
    repository: shipping
    tag: v0.1.1
  resources:
    limits:
      cpu: 300m
      memory: 2000Mi
    requests:
      cpu: 300m
      memory: 2000Mi
  service:
    port: 80
    targetPort: 80
  env:
    zipkin: zipkin.jaeger.svc.cluster.local
    javaOpts: "-Xms64m -Xmx128m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom -Dspring.zipkin.enabled=false"


user:
  name: user
  replicaCount: 1
  image:
    repository: user
    tag: v0.1.1
  resources:
    limits:
      cpu: 300m
      memory: 1000Mi
    requests:
      cpu: 100m
      memory: 400Mi
  service:
    port: 80
    targetPort: 8080
  env:
    mongo: user-db:27017
  probe:
    path: /health
    liveness:
      initialDelaySeconds: 300
      periodSeconds: 3
    readiness:
      initialDelaySeconds: 180
      periodSeconds: 3

userDb:
  name: user-db
  replicaCount: 1
  image:
    repository: user-db
    tag:  v0.1.1
  resources:
    limits:
      cpu: 300m
      memory: 1000Mi
    requests:
      cpu: 100m
      memory: 400Mi
  service:
    port: 27017
    targetPort: 27017

nodeSelector:
  kubernetes.io/os: linux